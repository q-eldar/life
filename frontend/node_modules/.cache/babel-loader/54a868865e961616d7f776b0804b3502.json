{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/me/js/dj/life/frontend/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nimport React, { Component, useState } from 'react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      preset: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPreset();\n  }\n\n  getPreset() {\n    axios.get('http://127.0.0.1:8000/api/worlds/1/').then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"working\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/me/js/dj/life/frontend/src/App.js"],"names":["axios","React","Component","useState","App","state","preset","componentDidMount","getPreset","get","then","res","console","log","data","catch","err","render"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBG,KAFwB,GAEhB;AACXC,MAAAA,MAAM,EAAE;AADG,KAFgB;AAAA;;AAMxBC,EAAAA,iBAAiB,GAAE;AACtB,SAAKC,SAAL;AACI;;AAEDA,EAAAA,SAAS,GAAG;AACfR,IAAAA,KAAK,CACAS,GADL,CACS,qCADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACI,KAJL,EAIOC,KAJP,CAIaC,GAAG,IAAI;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACI,KANL;AAOI;;AAEDC,EAAAA,MAAM,GAAG;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGI;;AAxBuB;;AA2B5B,eAAeb,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\nimport React, { Component, useState } from 'react'\n\n\nclass App extends Component {\n\n    state = {\n\tpreset: []\n    };\n\n    componentDidMount(){\n\tthis.getPreset();\n    }\n\n    getPreset() {\n\taxios\n\t    .get('http://127.0.0.1:8000/api/worlds/1/')\n\t    .then(res => {\n\t\tconsole.log(res.data)\n\t    }).catch(err => {\n\t\tconsole.log(err);\n\t    });\n    }\n    \n    render() {\n\treturn (\n\t    <h1>working</h1>\n\t)\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}