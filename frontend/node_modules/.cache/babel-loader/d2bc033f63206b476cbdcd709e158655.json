{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/me/js/dj/life/frontend/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preset: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPreset();\n  }\n\n  getPreset() {\n    axios.get('http://127.0.0.1:8000/api/worlds/1/').then(res => {\n      console.log(res.data.preset);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"working\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/me/js/dj/life/frontend/src/App.js"],"names":["React","Component","App","constructor","props","state","preset","componentDidMount","getPreset","axios","get","then","res","console","log","data","catch","err","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACxBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGI;;AAGDC,EAAAA,iBAAiB,GAAE;AACtB,SAAKC,SAAL;AACI;;AAEDA,EAAAA,SAAS,GAAG;AACfC,IAAAA,KAAK,CACAC,GADL,CACS,qCADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAAST,MAArB;AACI,KAJL,EAIOU,KAJP,CAIaC,GAAG,IAAI;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACI,KANL;AAOI;;AAEDC,EAAAA,MAAM,GAAG;AACZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGI;;AA3BuB;;AA8B5B,eAAehB,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\n\n\nclass App extends Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    preset: []\n\t}\n    };\n    \n\n    componentDidMount(){\n\tthis.getPreset();\n    }\n\n    getPreset() {\n\taxios\n\t    .get('http://127.0.0.1:8000/api/worlds/1/')\n\t    .then(res => {\n\t\tconsole.log(res.data.preset)\n\t    }).catch(err => {\n\t\tconsole.log(err);\n\t    });\n    }\n    \n    render() {\n\treturn (\n\t    <h1>working</h1>\n\t)\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}